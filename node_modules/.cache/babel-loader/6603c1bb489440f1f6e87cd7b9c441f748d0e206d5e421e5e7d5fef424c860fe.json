{"ast":null,"code":"var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n    // 7.3. Other pairs that do not both pass typeof value == 'object',\n    // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n    // 7.4. For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical 'prototype' property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n};\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\nfunction isBuffer(x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n      kb = objectKeys(b);\n  } catch (e) {\n    //happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length) return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i]) return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}","map":{"version":3,"names":["pSlice","Array","prototype","slice","objectKeys","require","isArguments","deepEqual","module","exports","actual","expected","opts","Date","getTime","strict","objEquiv","isUndefinedOrNull","value","undefined","isBuffer","x","length","copy","a","b","i","key","call","ka","kb","e","sort"],"sources":["C:/Users/nithi/Desktop/Python_IDE-main/node_modules/deep-equal/index.js"],"sourcesContent":["var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}